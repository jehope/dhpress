// PURPOSE: Handle editing fields of Marker on admin panel
//			Loaded by add_dhp_marker_admin_scripts() in dhp-marker-functions.php
// ASSUMES: dhpData is used to pass parameters to this function via wp_localize_script()
//			dhp_marker_settings_meta_box is the topmost "metabox" titled "Marker Settings"
//			custom-field-editor is the HTML div class that contains edit option list & editable value
//			postcustom is the HTML div class for custom fields for Markers in this Project (titled "Custom Fields")
//
// NOTES:   AJAX works by invoking wp_ajax_ code in dhp-marker-functions.php
// USES:    jQuery, Underscore

jQuery(document).ready(function($) {

	var ajax_url      = dhpDataLib.ajax_url;
	var markerID      = dhpDataLib.markerID;
	var projectID     = dhpDataLib.projectID;
	var custom_fields = dhpDataLib.customFields;

		// Insert HTML code for option box to select which custom field to inspect/edit
	$('#dhp_marker_settings_meta_box .inside').append(
		'<div class="custom-field-editor"><div class="left">Choose the field from the dropdown to add/edit.<select></select><br/><a class="add-update-meta button button-primary">Add/Update</a></div><div class="right"><textarea class="edit-custom-field"></textarea></div></div>');

		// If user clicks on Add/Update button, save field to WP DB via AJAX
	$('.add-update-meta').click(function() {
		var fieldName = $('.custom-field-editor option:selected').val();
		var fieldValue = $('.edit-custom-field').val();

		dhpAddUpdateMetaField(fieldName,fieldValue);

			// Save value in corresponding Custom Fields metabox section
			// Go through the divs and look for value there (stop at first)
		_.find($('#the-list .left input:text'), function(option) {
				// Does this have the same name?
			var match = (fieldName === option.value);
					// If match, copy value from Custom Field to edit box
			if (match) {
				var valID = wpKeyToValueID(option.id);
				var element = document.getElementById(valID);
				element.value = fieldValue;
			}
			return match;
		});
	});

	$('.custom-field-editor select').empty();
	var optionHtml;

	_.each(custom_fields, function(option){
		optionHtml += '<option value="'+option+'">'+option+'</option>';
	});
		// Now that we have list of values, insert it into HTML
	$('.custom-field-editor select').append(optionHtml);
		//update the project_id field or create it if it is a new marker
	dhpAddUpdateMetaField('project_id', projectID);
		// set value of edit field to Project ID
	$('.edit-custom-field').val(projectID);

		// Bind code to display value for whatever value is selected in dropdown options
	$('.custom-field-editor select').on('change',function() {
		displayMetaValue(this.value);
	});

		// PURPOSE: Given a keyID generated by WP for the CustomField, return the corresponding valueID
		// NOTES:   Different versions of WordPress (seem to use) different keyID/valueID patterns
		//			This code tries a match on "meta[#][key]" and "meta-#-key"
	function wpKeyToValueID(keyID) {
			// use Regular Expression to extract key number
			// Depending on version of WP may need to use 
		var re1=/meta\[(\d+)\]\[key\]/;
		if (re1.exec(keyID) != null) {
			return 'meta[' + RegExp.$1 + '][value]';
		}
		var re2=/meta-(\d+)-key/;
		if (re2.exec(keyID) == null) {
			alert('Cannot parse WordPress keyID for custom field');
			return null;
		}
		return 'meta-' + RegExp.$1 + '-value';
	} // wpKeyToValueID()


		// PURPOSE: Given the name of a custom field chosen in dropdown options, copy the value
		//			from the value in the Custom Fields box
		// NOTES:   The matching field will have an ID in the form "meta[fieldID][key]"; we need to extract the
		//			number from that, and use it to match the ID "meta[fieldID][value]"
	function displayMetaValue(optionName) {
			// clear it out initially
		$('.edit-custom-field').empty();
			// Go through the divs in the Custom Field section and look for value there (stop at first)
		_.find($('#the-list .left input:text'),function(option) {
				// Does this have the same name?
			var match = (optionName === option.value);
					// If match, copy value from Custom Field to edit box
			if (match) {
					// try to extract number with RegExp
				var valID = wpKeyToValueID(option.id);
				if (valID) {
					var element = document.getElementById(valID);
					$('.edit-custom-field').val(element.value);
				}
			}
			return match;
		});
	} // displayMetaValue()


	/*
	 * AJAX functions
	 */

	function dhpAddUpdateMetaField(fieldName, fieldValue) {
		// console.log("Updating field "+fieldName+" in Marker ID "+markerID);
		// var postID = $('#post_ID').val();
		$.ajax({
	            type: 'POST',
	            url: ajax_url,
	            dataType: 'json',
	            data: {
	                action: 'dhpAddUpdateMetaField',
	                post_id: markerID,
	                field_name: fieldName,
	                field_value: fieldValue
	            },
	            success: function(data, textStatus, XMLHttpRequest){
	                //console.log(textStatus);
	            },
	            error: function(XMLHttpRequest, textStatus, errorThrown){
	                alert(errorThrown);
	            }
	     });
	} // dhpAddUpdateMetaField()
});
